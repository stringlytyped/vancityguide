var addMarker;
var centerOnMarker;
var resetMap;

$.onmount('[data-js-map]', function () {
  var $this = $(this);

  var map;
  var markers = {};

  const mq = window.matchMedia("screen and (min-width: 768px)");
  const accessToken = '<%= Rails.application.credentials[Rails.env.to_sym][:mapbox][:token] %>';
  const defaultCenter = [-123.0995966, 49.2824489];
  const defaultZoom = 13.5;

  // Initialize map upon initial page load, but only when the media query matches 
  if (mq.matches == true) {
    showMap();
  }

  // Watch for subsequent media query changes and initialize map if necessary 
  mq.addListener(function (e) {
    if (e.matches) {
      showMap();
    }
  });

  // Runs the appropriate steps needed to initialize the Mapbox map
  function showMap() {
    mapboxgl.accessToken = accessToken;

    map = new mapboxgl.Map({
      container: $this.get(0),
      style: 'mapbox://styles/imeow/ck3uhi0xf07rf1cntmz7erowm?fresh=true',
      center: [-123.0995966, 49.2824489],
      zoom: 13.5,
      attributionControl: false
    });

    map.addControl(new mapboxgl.AttributionControl({
      compact: true
    }));
  }

  addMarker = function(lat, lon, category, id, tooltip) {
    // If marker for this POI already exists, remove it first before re-adding it
    // (We re-add it in case some data has changed)
    if (markers[id]) {
      markers[id].remove();
    }

    // Create element in memory to act as a marker
    var element = $( '<div class="map-marker --' + category
                    + '" title="' + tooltip + '"></div>' ).get(0);

    // Attach click event listener to element
    $(element).on('click', function () {
      Turbolinks.visit('/pois/' + id);
    });

    // Add the marker element to the DOM via the mapbox API
    marker = new mapboxgl.Marker(element)
    marker.setLngLat([lon, lat])
    marker.addTo(map);

    // Save mapbox marker object so that it can be referenced in the future
    markers[id] = marker
  };

  centerOnMarker = function(id) {
    map.flyTo({ center: markers[id].getLngLat(), zoom: 17 });
    window.setTimeout(function() {
      $('[data-js-site-content]').addClass('--marker-centered');
    }, 50);
  };

  resetMap = function() {
    map.flyTo({ center: defaultCenter, zoom: defaultZoom });
    $('[data-js-site-content]').removeClass('--marker-centered');
  };
});